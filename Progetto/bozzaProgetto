CLASSI:pagina, utente (autore), frasi, modificaProposta
ATTRIBUTI:
pagina(titolo,giorno, ora)
utente(nome, cognome)
autore(login, password)
frasi(testo)
collegamento()
ModificaProposta()
Testo()

_______________________________________________
ASSOCIAZIONI:
1)collegamento con pagina(dest) frase con collegamento. Un collegamento collega una sola pagina
Una frase può essere un solo collegamento. Una pagina può avere più collegamenti. 
ps:Una frase può essere presente in più testi. Se è fatta una proposta, eventualmente si sostituisce l'array list in pagina creando la nuova frase al posto della vecchia.
2)Utente effettua modifica proposta, la modificaProposta si riferisce alla pagina
3)Proposta modfica un testo, proposta si riferisce ad una o più frasi.





















































class Pagina {
    private String titolo;
    private List<ElementoTesto> elementiTesto;

    public Pagina(String titolo) {
        this.titolo = titolo;
        this.elementiTesto = new ArrayList<>();
    }

    public void aggiungiFrasi(Frasi frasi) {
        elementiTesto.add(frasi);
    }

    public void aggiungiCollegamento(Collegamento collegamento) {
        elementiTesto.add(collegamento);
    }

    public String visualizzaTestoContiguo() {
        StringBuilder testoContiguo = new StringBuilder();
        for (ElementoTesto elemento : elementiTesto) {
            if (elemento instanceof Frasi) {
                testoContiguo.append(((Frasi) elemento).getTesto()).append(" ");
            } else if (elemento instanceof Collegamento) {
                testoContiguo.append(((Collegamento) elemento).getFraseCollegamento()).append(" ");
                testoContiguo.append(((Collegamento) elemento).getPaginaDestinazione().visualizzaTestoContiguo()).append(" ");
            }
        }
        return testoContiguo.toString();
    }
}

interface ElementoTesto {
}

class Frasi implements ElementoTesto {
    private String testo;

    public Frasi(String testo) {
        this.testo = testo;
    }

    public String getTesto() {
        return testo;
    }
}

class Collegamento implements ElementoTesto {
    private String fraseCollegamento;
    private Pagina paginaDestinazione;

    public Collegamento(String fraseCollegamento, Pagina paginaDestinazione) {
        this.fraseCollegamento = fraseCollegamento;
        this.paginaDestinazione = paginaDestinazione;
    }

    public String getFraseCollegamento() {
        return fraseCollegamento;
    }

    public Pagina getPaginaDestinazione() {
        return paginaDestinazione;
    }
}

public class Main {
    public static void main(String[] args) {
        Pagina pagina1 = new Pagina("Pagina 1");
        Frasi frasi1 = new Frasi("Il Napoli esonera Garcia,");
        Collegamento collegamento1 = new Collegamento("Garcia è scarso,", new Pagina("Pagina 2"));
        Frasi frasi2 = new Frasi("entra Mazzarri.");

        pagina1.aggiungiFrasi(frasi1);
        pagina1.aggiungiCollegamento(colGIUSEPPElegamento1);
        pagina1.aggiungiFrasi(frasi2);

        String testoContiguo = pagina1.visualizzaTestoContiguo();
        System.out.println(testoContiguo);
    }
}
_______________________________________________
altra idea, frase come generalizzazione di collegamento e non.

